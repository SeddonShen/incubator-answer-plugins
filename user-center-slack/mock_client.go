// Code generated by MockGen. DO NOT EDIT.
// Source: client.go

// Package slack is a generated GoMock package.
package slack

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockISlackClient is a mock of ISlackClient interface.
type MockISlackClient struct {
	ctrl     *gomock.Controller
	recorder *MockISlackClientMockRecorder
}

// MockISlackClientMockRecorder is the mock recorder for MockISlackClient.
type MockISlackClientMockRecorder struct {
	mock *MockISlackClient
}

// NewMockISlackClient creates a new mock instance.
func NewMockISlackClient(ctrl *gomock.Controller) *MockISlackClient {
	mock := &MockISlackClient{ctrl: ctrl}
	mock.recorder = &MockISlackClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockISlackClient) EXPECT() *MockISlackClientMockRecorder {
	return m.recorder
}

// ListUsers mocks base method.
func (m *MockISlackClient) ListUsers() ([]SlackUserDetail, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListUsers")
	ret0, _ := ret[0].([]SlackUserDetail)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListUsers indicates an expected call of ListUsers.
func (mr *MockISlackClientMockRecorder) ListUsers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListUsers", reflect.TypeOf((*MockISlackClient)(nil).ListUsers))
}
